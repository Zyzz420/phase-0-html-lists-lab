{
  "stats": {
    "suites": 4,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2023-06-15T05:52:03.406Z",
    "end": "2023-06-15T05:52:03.759Z",
    "duration": 353
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Scrub' to equal 'Scuber'",
        "showDiff": true,
        "actual": "Scrub",
        "expected": "Scuber",
        "stack": "AssertionError: expected 'Scrub' to equal 'Scuber'\n    at Context.<anonymous> (test/indexTest.js:9:30)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected ' let companyName=\\'Scrub\\';\\n let mostProfitableNeighborhood=\\'Chelsea\\'\\n let companyCeo=\\'Susan Smith\\'\\n\\n' to match /const companyName/",
        "showDiff": false,
        "actual": " let companyName='Scrub';\n let mostProfitableNeighborhood='Chelsea'\n let companyCeo='Susan Smith'\n\n",
        "stack": "AssertionError: Expected companyName to be a const: expected ' let companyName=\\'Scrub\\';\\n let mostProfitableNeighborhood=\\'Chelsea\\'\\n let companyCeo=\\'Susan Smith\\'\\n\\n' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:13:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Scrub' to equal 'Scuber'",
        "showDiff": true,
        "actual": "Scrub",
        "expected": "Scuber",
        "stack": "AssertionError: expected 'Scrub' to equal 'Scuber'\n    at Context.<anonymous> (test/indexTest.js:9:30)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected ' let companyName=\\'Scrub\\';\\n let mostProfitableNeighborhood=\\'Chelsea\\'\\n let companyCeo=\\'Susan Smith\\'\\n\\n' to match /const companyName/",
        "showDiff": false,
        "actual": " let companyName='Scrub';\n let mostProfitableNeighborhood='Chelsea'\n let companyCeo='Susan Smith'\n\n",
        "stack": "AssertionError: Expected companyName to be a const: expected ' let companyName=\\'Scrub\\';\\n let mostProfitableNeighborhood=\\'Chelsea\\'\\n let companyCeo=\\'Susan Smith\\'\\n\\n' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:13:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}